// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AuthInput struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type AuthPayload struct {
	Token string `json:"token"`
	User  *User  `json:"user"`
}

type Comment struct {
	ID        string     `json:"id"`
	Content   string     `json:"content"`
	CreatedAt time.Time  `json:"createdAt"`
	UpdatedAt time.Time  `json:"updatedAt"`
	User      *User      `json:"user"`
	Parent    *Comment   `json:"parent,omitempty"`
	Replies   []*Comment `json:"replies,omitempty"`
}

type Mutation struct {
}

type PaginationInput struct {
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

type Post struct {
	ID              string     `json:"id"`
	Title           string     `json:"title"`
	Description     string     `json:"description"`
	CreatedAt       time.Time  `json:"createdAt"`
	UpdatedAt       time.Time  `json:"updatedAt"`
	CommentsEnabled bool       `json:"commentsEnabled"`
	User            *User      `json:"user"`
	CommentCount    int32      `json:"commentCount"`
	Comments        []*Comment `json:"comments,omitempty"`
}

type Query struct {
}

type Subscription struct {
}

type User struct {
	ID           string    `json:"id"`
	Username     string    `json:"username"`
	PasswordHash string    `json:"passwordHash"`
	CreatedAt    time.Time `json:"createdAt"`
	UpdatedAt    time.Time `json:"updatedAt"`
}
